■ IT
    ◦IT… Information Technology、情報技術。コンピューターをベースとした情報システム、特にアプリケーションソフトウェアやコンピューターのハードウェアなどの研究、デザイン、開発、インプリメンテーション、サポートあるいはマネジメントを指す。コンピューターとネットワークを利用した情報技術の総称。コンピューター関連の技術そのものを指す用語。
    ◦ICT… Information and Communication Technology、情報通信科学。　ITと比べ、情報や技術を共有するためのコミュニケーションの意味がより強い。
情報を伝達することを重視し技術の活用方法、またはその方法論などを指す。
    ◦IoT… Internet of Things、物のインターネット。　身の回りのあらゆるものがインターネットにつながる仕組みをあらわしたもの。テレビや冷蔵庫、インターホンなど身の回りのものがインターネットに接続することで生活や仕事をより豊かにする画期的な仕組みを指す。

■ OS

    ◦OS…オペレーティング・システム （Operating System） キーボードやマウス・タッチパッドなどのデバイスから入力した情報をアプリケーションに伝え、またソフトウェアとハードウェアの連携を司る中枢的な役割を果たす。 同じOSならハードウェアの違いを越えて同じような操作感で使え、開発者もそのOSで開発を行えばハードウェアの違いを越えて提供出来る。
    ◦Windows…マイクロソフトが1985年に開発した現在最も有名なOSでありPC市場の９割のシェアを誇る。
    ◦macOS (Mac OS X)…1984年にアップルが開発したOS。マウスの利用を前提としており、GUI（グラフィカルユーザインタフェース）を採用した元祖と言われている。特に、写真や出版業界などグラフィックを用いる現場で重宝されている。
    ◦UNIX…1969年にAT＆T社が開発した無料のOS。現在多くのサーバに使用され、インターネットを構築する上で多大な貢献をしている。大学などの教育機関や政府・官公庁にも導入され、その後のオープンソース化の流れの中で様々な派生OS（LinaxやFreeBSD）が生まれている。
    ◦Linux… 1991年にLinuxはリーナストーバルによって開発された。OSを開発したい人や大規模な基幹システムよ開発者や運用者、組み込み系エンジニア、ネットワーク機器やデータベースに関わるITサービスの従事者によく使われている。


■ 言語・環境

    ◦マークアップ／フロントエンド…「フロントエンドエンジニア」とは、Webサイトにおけるフロントエンド、すなわちユーザが目にするサイト部分全てを作成することの出来るタイプのエンジニアです。マークアップエンジニアがHTMLのプロフェッショナルであるのに対し、フロントエンドエンジニアはより広範に、Webサイト作成全般のプロフェッショナルと言えます。あるいは、Webサイトの特にプログラム面に強みをもつタイプのエンジニア、とも言えます。マークアップエンジニアが主にHTMLを使うのに対し、フロントエンドエンジニアは、HTMLの他、JavaScript、CSS、PHPなど、さまざまな言語を使ってコーディングを行います。ただし、これらの違いは絶対ではなく、企業によってはフロントエンドエンジニアも含めてマークアップエンジニアと呼ぶこともあります。
    　◦HTML…Hyper Text Markup Language（ハイパーテキスト・マークアップ・ランゲージ）の略で、Webページを作るための最も基本的なマークアップ言語のひとつです。「HTML」「XHTML」「HTML5」など、いくつか種類があり、現在、インターネット上で公開されてるウェブページのほとんどは、HTMLで作成されています。
    　◦CSS…（Cascading Style Sheets、カスケーディング・スタイル・シート）とは、ウェブページのスタイルを指定するための言語です。CSSは、HTMLと組み合わせて使用する言語でHTMLがウェブページ内の各要素の意味や情報構造を定義するのに対して、CSSではそれらをどのように装飾するかを指定します。HTMLは情報構造を定義するための言語であり、見栄えの制御のために本来の役割とは違った使い方をすると、 文書の情報構造がでたらめになってしまうため、ウェブページのスタイリングにHTMLを用いるべきではない。
    　◦JavaScript…動的なWebページを作成する事のできるプログラミング言語で、ほぼ全てのデバイスにJavaScriptが使われており、ユーザー側のWebブラウザと、Webサイトまたはウェブサービスの相互間のやりとりを、円滑にするために使われている。JavaScriptの実行される一般的な場面として  JavaScriptのコードは、ブラウザがWebページにアクセスしたときにダウンロードされます。ページのロードが完了して画面上に表示されると、JavaScriptのコードが実行されて、次に実行するべき動作がもしあればブラウザに指示します。テキストカーソルを検索ボックスに表示するなどの動作がすぐに実行されない場合、JavaScriptのコードはアイドリング状態になり、特定の「イベント」の発生を待つことになります。「イベント」が発生した時点で、JavaScriptのコードが発動され、動作を実行します。またNode.jsは近年、JavaScriptの技術を応用した数々のテクノロジーを応用したプログラムのまとまり（ライブラリ）。
・ブラウザに表示された画面に動きを与えられる・サーバーと通信して情報を送受信できる・Webページ上に複雑なアプリケーションを作れる・スマホアプリを作れる（『React Native』JavaScriptのスマホアプリ開発用のフレームワーク）・チャットボットなどサーバで動くアプリケーションを作れる・スプレッドシートと連携できる、など様々なことに使える。



    ◦サーバーサイド…サーバ上で動くものをサーバサイドという言い方をする。
    　◦.NET（C#, VB）… NET Frameworkを指す言葉として使われる。
NET Frameworkは、Windowsとの相性の良さから、Windows系のシステム開発で用いられることが多く、特に業務の効率化や自動化をするシステム開発においては.NET Frameworkが使用されるケースも少なくない。
C#とは、マイクロソフトによって開発されたプログラミング言語の一種で .NET Framework上で使うことを想定して設計されており、このC#を用いたコンパイラのことを「C#.NET」と呼ぶが、C#とC#.NETは同じ意味合いで使われることが多い。「C#.NET」は、「C#」についての環境に応じて提供された機能群を指します。
VBとは、「Visual Basic」と呼ばれるプログラミング言語のことです。ほかの言語と比較して文法がシンプルで、簡単なプログラムを組みたいときに重宝しますが、高度な技術を要する分野においては不向きという特徴があります。 2002年に行われたバージョンアップで.NET Frameworkの環境下で使用できるようになり、「VB.NET」という名称が使われるようになりました。
VB.NETは、Microsftが開発したプログラミング言語です。 VBの時代から「学びやすさ」と「使いやすさ」を重視して改良されてきた言語でNET系のアプリ開発ができ、初めてでも学びやすいのが最大の特徴です。 ・ 
    　◦Java…Javaとはプログラミング言語の1つです。
世界的に見ても使用されている言語、習得したい言語として1位を記録するほどに実績のある言語です。なぜここまで人気が高いのかを説明すると、「Javaは多くの現場で使われていること」、「汎用的でOSに依存しない」などの理由があります。JavaはOSに依存をしないことからどんな環境でもソフトを動かすことができます。・処理速度が速い・プラットフォームに依存しない・オブジェクト指向であるため実際の業務をモデル化してプログラムを作りやすく、カプセル化などの技術によりセキュリティコントロールも容易にできるなどの利点がある。しかし一度環境を整えれば、Javaは本当に高性能な言語ですが、実際に動かせるようになるまでのインフラの準備が、PHPなどのサーバーサイドプログラムと比べるとハードルが高いデメリットもある。Webアプリ・Webサービス、デスクトップアプリ、スマホアプリ、組み込み系、IoTなど様々なものに使える。


    　　◦Java SE… JavaSE（Java Standard Edition）を一言で言うと「Javaの基本機能をまとめたもの」となります。 Java言語でプログラミングを行う際に最低限必要な機能をまとめたものです。アプリケーションを開発する場合は後述するJDKをインストールしておく必要があります。JavaSEはパソコン上で動作するゲームや便利なソフトを作ることができます。
パソコンでの用途以外では携帯電話や家電に仮想マシン(VM)と呼ばれる仕組みが搭載されていればJava言語を使ってアプリケーションの開発を行うことができます。最近で言えばandroidを搭載したスマートフォンのアプリを作る際にJava言語を使用するためには、このJavaSEの導入は必須となります。
        　◦Java EE（Jakarta EE）… JavaEE（Java Enterprise Edition）は「JavaSEを元にしてサーバーサイドの機能を追加したもの」です。 主にWebサイト（もしくはWebアプリケーション）を開発する際に用いられます。JavaEEは簡単にいえば「JavaSE+拡張機能」といった構成になっています。 Java EEは、Java SEにWebアプリケーションの開発に必要なサーバー関係のライブラリなどを追加したもので、Java EEの中にJava SEも含まれます。そのため、Java EEでWebアプリケーションの開発するときにはJava SEのライブラリを使うことができます。 Webサイトが置いてあるサーバーはユーザーからのアクセスに応じてWebサイトの情報をユーザーに送ります。この送る際に何か処理が必要な場合にJava EEの出番となります。
    　◦Perl… Practical Extraction and Report Language Perlはテキスト処理が得意なスクリプト言語で、値と文字列の自動変換機能、強力な正規表現が言語に組み込まれています。処理速度はRubyなどのスクリプト言語と比べて比較的高速ですので、人気も高いです。Perlは言語としての歴史が長く、開発以来多くの利用者がいる言語なので、情報が豊富でコミュニティが活発なので、利用者には使いやすいです。
Perlの応用範囲は広く、システムユーティリティやソフトウェアツールの作成、データベースへのアクセス、グラフィックやネットワーク処理、そしてウェブプログラミングなどに適しています。インタープリタ型なので、プログラムを書いたら面倒はコンパイル作業がなく、すぐにテスト確認が出来ます。動作を確認しながら作業が出来るのがPerlのメリットで、開発効率が良く、エンジニアとしても使いやすいです。HTMLは単に文字や画像を表示する機能しかないのですが、Perlでプログラムを作成することにより、掲示板など、表示内容がどんどん変化していくページが作れます。最近では、Perlの代りにPHPを用いて掲示板などが作られていることもあります。Perlはテキスト関係の処理が得意ということもあり、ほんの数行でデータの保存や、キーワードの検索を実現させることができます。またUNIX系のシステムには最初からインストールされていますし、WindowsやMacでもインストールが可能で、作動しますので、マシンに関係なく利用できるメリットがあります。  古くからのコードを生かしたいならPerl。
    　◦PHP… 動的にWebページを生成することができるサーバーサイドのスクリプト言語です。他のプログラミング言語と比較して仕様や文法が簡単なため習得しやすい 。MySQLなどのデータベースとの連携が容易なことなどから、WordPressを含めたWebアプリケーションの開発にもよく使われる 。PHPの処理はWebサーバー側で行われる。WordPressでは本体のプログラムだけでなくセットで使われるテーマ・プラグインなどもPHPで作成されているので、PHPを扱うことができればカスタマイズの幅が広がります。 TMLに埋め込むことができるため、Web開発でよく使用される ユーザーが入力した情報をPHPを使って受け取ることができます
    　◦Ruby… まつもとゆきひろ氏により開発されたオブジェクト指向スクリプト言語です。 オブジェクト指向ならではの機能を使うことができます スクリプト言語はこう言った手続きが一切不要で、そのまま実行することができるため、コンパイラ言語に比べてプログラミングを手軽に行うことができます。、Ruby on RailsというWebアプリケーションフレームワークを使うことができるということです。Ruby on Railsを使うと、WebサイトやWebベースの業務システムを効率良く開発できると言われています。Rubyを使っている企業は多くあり、そのほとんどがRuby on Railsを使っている。 Rubyは開発者が日本人ということもあり、日本語で書かれた有用な参考書が数多く手に入ります。Ruby on Railsは開発効率が高いため、少人数での短期開発に向いていますRuby on RailsにはAPIモードという構成があり、アプリケーションを構築する際にAPIモードを選択することでWebAPIを効率よく開発することができます。またRuby on Railsは大量のデータ処理や、複雑な計算を行う企業の会計などの基幹系システムのサービス開発にも向いています。


■ サーバーソフト

    ◦Apache… HTTPに特化　WEBサーバーとしての機能が豊富　ある程度のメモリが必要
世界中で使用されているWebサーバーソフトウェア(HTTPサーバー)です。 2017年4月時点で全世界の約50%のシェアを占め、最も利用されています。オープンソースソフトウェア(OSS)で、無償で誰でも利用可能、約20年間OSSとして公開され、バージョンアップした結果により信頼性が高い、CMSを動かすためのPHPやデータベースと連携がしやすい、モジュール(部品または要素)により基本機能を拡張可能LinuxだけでなくWindowsなど複数のサーバーOS上で利用可能などの特徴がある。
    ◦nginx… Nginxにはphpの処理機能がない。同時リクエストの処理に特化し同時接続数がApacheの10～100倍に増加している。初めから多くの機能はついていないためメモリ使用量が少ない。ApacheはHTTPのサービスに特化していて、Nginxは他サービスにも柔軟に対応できるようになっています 「HTTPサーバ」「リバースプロキシサーバ」「メールプロキシサーバ」「汎用TCP / UDPプロキシサーバ」などの機能を持ちます。

    ◦IIS… 無料で利用できるWebサーバーソフト。Windows OSで動く。視覚的に操作可能(コマンドを覚える必要がない) IISは、WebサーバだけではなくFTPサーバなどとしても利用でき、APS.NETやPHPをはじめとするWebアプリケーションもホスティングすることができる。ASP(.NET Framework)を使って簡単に動的なWebページを作成出来る。ASP(.NET Framework)以外の言語(PHPやJava)で開発された物を動かすには、ほとんど利点がない。



■ SQL

    ◦SQL… データベース言語の中で、最も普及している言語の一つ 。DBMS（データベース管理システム）上でデータやデータベースを制御するための言語であり、ユーザーやシステムからの命令を受けてRDB（リレーショナルデータベース）にクエリ（問い合わせ）を行い、結果を返します 。データベース言語としてISO（国際標準化機構）で規格化されています。そのため一つのデータベース用のSQLを覚えたら、そのほかのほとんどのRDBで同じように利用できます。SQLは、大きく分けて3種類の言語（データ定義言語、データ操作言語、データ制御言語）から構成されています。データベースを制御したり操作したりする際に使い分けられ、すべて命令文で動詞と目的語を組み合わせた構文です。
    　◦DB2… 1983年からIBMが販売しているRDBMS（Relational Database Management System）です。DB2では、1つのインスタンスに複数のデータベースを対応させることができますDB2のデータベース単位による分割では、Oracleのスキーマ単位による環境分散に比べて、より独立した環境をユーザーに提供することができます。OracleもDB2も1つのサーバ上に複数インスタンスを作成できますが、複数インスタンスには、追加のシステム・リソース（メモリとディスク・スペース）が必要になる、複数インスタンスを管理するための負荷が増大する、などのデメリットがあります。DB2における、1インスタンスの中での複数データベース化には、このような複数インスタンス化によるデメリットを低減させ、かつ、独立したデータベース環境をユーザーに提供できるという利点があります。
    　◦MySQL…強力な拡張性、可用性および柔軟性により、次世代のWeb、クラウド、エンタープライズそして通信サービスにおけるデータベースの課題への対応が可能になります。MySQL（マイ・エスキューエル）とは世界中の多くの企業が使用しているデータベース管理システムです。大容量のデータも高速に動作を行えるため、レンタルサーバーや検索エンジンでも使用されています。・オープンソース(GPL)で基本的に無料・Linux、Windows、Mac OS Xなど複数のOSで利用可・巨大サイトの利用に耐える頑丈さをもつ・操作方法はシンプル(CMSでは初期設定すれば、通常利用では操作がほぼ不要)・巨大企業オラクルが開発(サン・マイクロシステムズより買収)・便利な管理ツールが充実(phpMyAdmin、MySQL Workbenchなど)などの特徴がある。Google、Facebook、YouTube、Yahooのような世界的Webサービス企業にも多くの導入実績がある。
    　　◦Maria DB…MariaDB(マリアディービー)とは、「MySQL」から派生したオープンソースリレーショナルデータベースシステムです。「列単位」で処理を行うカラム型データベースエンジンによる並列処理が特徴です。「拡張性」「処理性能」「高品質」が評価され、世界中で急速にシェアを拡大しています「Linux」「Windows」「macOS」「Solaris」「UNIX」「BSD」などで動作します主要なLinuxディストリビューションである「Red Hat Enterprise Linux」「Fedora」「Ubuntu」「BSDディストリビューション」などにおいてMySQLに代わってMariaDBが標準データベースになっています。MariaDBは、プラグイン可能なストレージを活用して拡張であるため、拡張可能なデータベースプラットフォームとしてさまざまなワークロードをサポートできます。・スタンドアロンアプリケーション・Webアプリケーション・クラウドアプリケーション・IoT(Internet of Things)アプリケーション・エンタープライズトランザクション・分析システム・モバイルデバイスなどに使用できる。・Google・Mozilla・Wikipediaも使っているMariaDBは全てのユーザーがシステム上でMySQLと入れ替えることのできる双対の入れ替え品とみなされています。有料機能があるMySQLと比べ、完全無料。
    　◦Oracle DB…大きな特徴であり、ウリでもあるのが高い「堅牢性」です。普段利用しているデータベースが破損・全損した際に用いるためにスタンバイしているデータベースが構築されています。何かインシデントなどが起きてしまった際にほとんど時間をかけずに継続して運用できるような設計がなされており、障害復旧などにかかる時間が少なくて済みます。リクエスト数が多いと、まだリクエストを実行していないユーザの行までロックされてしまう「ロック・エスカレーション」という問題が発生するケースがあります。しかし、Oracle DBではこれを解決する「行レベルロック」を実現。Oracle DBはエンジンからコアAPI、様々な機能がC言語で構成されています。他のプラットフォームへの移行が比較的容易である。Oracle Databaseは高額です。個人利用や社内での開発目的（顧客向けではない）であれば、Oracle Database Enterprrise EditionやStandard Edition 2が無償で利用ができます。
    　◦PostgreSQL…すべてのソースが無料で公開されており自由に利用できます。PostgreSQL（ポストグレスキューエル）とは、リレーショナルデータベース管理システムのひとつです。PostgreSQLでは、著作権の表示と免責事項を明記しておけば、再利用も再配布も自由に行える「BSDライセンス」を採用しています。そのため、自由に機能を追加したり改修したりするなどされ、さまざまな場面で利用されています。PostgreSQLでは商用利用を想定した複雑なシステムに対応できる「Join方式」の機能が充実しています。PostgreSQLと比較されやすいMySQLでも一部Join方式をサポートしています。ただし、PostgreSQLなら、MySQLが対応していないJoin方式もサポートしているメリットがある。数多くのオープンソースソフトウェアと連携出来る。「パラレルクエリ」とは、クエリ（データベースへの処理要求）の実行を並列化させるために複数のCPUを活用して、性能向上を図ることを目指した仕組みのことです。導入への大きな課題となるのがサポート体制が薄いことである。
    
    　◦SQLite…SQLite（エスキューライト）は、ファイルベースのデータベースエンジンです。 SQLiteは、サブクエリーを含むほとんどのSQL構文の実行ができます。 SQLiteは構文が充実していますが、同時接続を並列に処理する機構が比較的弱いという短所があります。複数のクライントから同時に接続されることを考慮して作られています（同時実行制御）。
その際に、データの読み込みと書き込みをロックという仕組みで制御することにより、データの整合性を保ちつつ同時接続ができるよう作られています。SQLiteができるロックはそれほど柔軟でないのが特徴です。ロックする範囲をデータベース全体でしか制御できない（テーブル単位、行単位でのロックができない）特徴を持っています。ローカルのファイルを直接データベースとして扱うので、複数のサーバーとネットワークごしに接続するのには不向きです。インストール型のアプリケーションやローカルのテスト用に使えます。
Webアプリケーションとしても、単一インスタンスでアクセスが少なく、可用性も低くてよいWebアプリケーションでは十分に使えます。軽量コンパクトなリレーショナルデータベースシステムです。「小型」「高速」「自己完結型」「高信頼性」「高機能」のSQLデータベースエンジンを実装するC言語ライブラリとして、主に「組み込み用途」や「小規模システムのデータストア」として利用されていますさまざまなIoTデバイスのデータベースエンジンとして使用できます。
・スマートフォン(携帯電話)・セットトップボックス・テレビ・ゲーム機・カメラ・スマートウォッチ・リモートセンサー・サーモスタット・工作機械・医療機器・ロボット・ドローン・自動車・飛行機　などで使える。
SQLiteはアプリケーションファイルフォーマットとしても利用できます。アプリケーションで使用する情報を、fopen()を使用して「XML」「JSON」「CSV」「独自形式」などの方式でディスクファイルに書き込むのではなく、必要な情報をSQLiteデータベースに格納して利用できます。
・データへのアクセスが容易・トランザクション更新が可能・パフォーマンス向上・コスト削減・複雑さを軽減・信頼性向上・パーサーを作成してトラブルシューティングする必要がなくなる・クロスプラットフォーム　などが主なメリット。・デスクトップアプリケーション・メディアのカタログ作成および編集スイート・財務分析ツール・CADパッケージ・バージョン管理システム　などで使われている。
SQLiteは中程度のWebサイトのデータベースエンジンとして最適に機能します。SQLiteは「100Kヒット/日」程度のWebトラフィックに対応でき、その10倍のトラフィック量で動作することが実証されています。
SQLiteは「構成を必要としない」「通常のディスクファイルに情報を保存できる」などの特徴を持つため、中小規模のWebサイトでバックアップ用データベースとして広く使用されています。
SQLiteは、データ分析ツールのデータストアとして、大きなデータセットの分析処理にも利用できます。分析結果データベースは単一ファイルとなるため、「USBメモリスティックに書き込める」「Eメールで送信できる」など、手軽にやり取りできるメリットがあります。・Webサイトのログ分析・スポーツ統計分析・プログラミング測定基準の編集・実験結果の分析　などで使える。
アプリケーション内にSQLiteを組み込むことで、エンタープライズRDBMSに対するキャッシュ機能として利用できます。
ほとんどのクエリがローカルキャッシュに対して実行され、ネットワークのラウンドトリップを回避できるため、処理時間を短縮できます。また、ネットワークや中央データベースサーバの負荷も軽減できます。
アプリケーションが使用するデータをローカルSQLite内に保存しておけるため、オフラインでも動作できるアプリケーションを構築できます。

    　◦SQL Server…Windows OSで動作させることができるリレーショナルデータベースの一種です。
ほかのデータベースと比較すると、操作のしやすさに定評があり、国内でも人気の高いデータベースとして知られています。関係（リレーショナル）型のデータベース行と列によって構成されたテーブル同士を関連付けて管理するデータベースのことで、直感的な操作ができる利点があります。SQL Serverも、マウスだけで簡単に管理ができるため、データベースの操作に不慣れな人にも最適で扱いやすいのが特徴です。この使いやすさを可能にしているのが、SSMS（SQL Server Management Studio）と呼ばれる統合管理ツールです。複数人のユーザーが同時にアクセスできるうえ、データやユーザーごとにアクセス権限を付与することができます。外部のユーザーにデータを操作されることがなく、セキュリティに優れた仕様です。さらに、バックアップや復元、復旧する機能を備えているため、データの破損に強い特徴もあります。T-SQL（Transact-SQL）と呼ばれる種類が存在します。これは、SQL Server向けにマイクロソフトが独自に追加した言語で、制御フローやローカル変数などの仕様を加えたものです。有料２つ無料１つの三種類のエディションがある。
   
    ◦CRUD…永続的なデータを取り扱うソフトウェアに要求される4つの基本機能である、データの作成（Create）、読み出し（Read）、更新（Update）、削除（Delete）の頭文字を繋げた語。主にデータベースを応用したシステムやデータベース管理システム（DBMS）について用いられる語で、この4つに対応する機能を実装することで、システム上で自在にデータの操作や管理を行うことができるようになる。様々な種類のデータを扱うシステムやソフトウェアを設計する際に、どの機能やプログラム（モジュール）が、どのデータを作成（C）・読み出し（R）・更新（U）・削除（D）するのかを表の形で整理したものをCRUD図（表）という。機能やデータが複雑に分かれてるシステムでは、どの機能がどのデータに対してどのような操作を行う（必要がある）のかを把握するのが難しくなる場合がある。そのような場合に、横方向にデータやテーブルなどの種類を、縦方向に機能やモジュールなどを並べた表を作成し、それぞれが交差する項にCRUDのどれが該当するかを書き入れたCRUD図を作成することがある。
    ◦トランザクション…複数の処理を1つにまとめたものです。「複数の処理」は分離させることはできない。成功か失敗のいずれかである。目的をもつ業務処理のひとまとまり。原子性（Atomicity）トランザクション全て完全に実行された状態か、全く実行されない状態しかとらないとする性質です。一貫性（Consistency）整合性がとれたデータベースでは、トランザクション実行後も整合性がとれるという性質のことです。独立性（Isolation）同時に実行された複数のトランザクションはお互いに干渉しないという性質および永続性（Durability）トランザクションがコミット（承認）されると、停電やクラッシュなどのシステム障害の場合でもコミットされたままになることを保証する性質です
    　◦コミット…「確定させる」や「反映させる」トランザクション処理で、結果が確定することを「コミット」と言います。またファイルの変更履歴の保存や管理を行うバージョン管理システムで、その結果を反映させることも「コミット」
    　◦ロールバック…トランザクションの途中で不都合があった場合、それまでの更新を無かったことにすることを、ロールバックすると言う。コミット後は、それまでの更新をロールバックすることはできない。システム障害やデータの喪失、破損などが起きた際に、以前に正常に稼働していたある時点の状態に戻して復旧を試みることを指す。
    ◦排他制御（排他ロック）…複数の主体が同じ資源を同時に利用すると競合状態（race condition）が生じる場合に、ある主体が資源を利用している間、別の主体による資源の利用を制限もしくは禁止する仕組みのこと。排他制御は割り込み禁止機構などのハードウェア上の機能を利用して実装する場合と、プログラムの実行制御によりソフトウェア的に実装する場合がある。これによりデータの同時更新により発生する更新消失を防止することができる。制御のためのロックは、表、ブロック、列といった単位でかけることができる。
    　◦楽観ロック…、そもそも「同時アクセスはあまり起きない」という楽観的な考え方の排他制御です。データ自体をロックすることはせず、更新対象のデータが更新前と同じであるかを確認してから更新することで、データの整合性を保つことができます。
    　◦悲観ロック…同じデータを他者が頻繁に更新するという悲観的な前提の排他制御です。具体的には、更新対象データを取得時にロックして他者が操作できないようにする方式
    ◦実行計画…ユーザが発行した問い合わせに基づきデータベース管理システム (DBMS) が内部的に生成する情報であり、これによりDBMSの行うデータ処理がプログラム的に表される。どのインデックスorテーブルスキャンを使ってクエリーを処理するかの計画。計画が遅ければ、当然実行も遅い。
    ◦チューニング…システムやプログラムなどを改良し、パフォーマンスの向上を図ることを言う。開発し終わった後でより信頼性の高いシステムへ改良しようとする行為を「パフォーマンスチューニング」と言うこともある。
    ◦パフォーマンス…コンピューターやネットワークといったシステムやその部品がどの程度よく機能するか・成果を発揮するかといった性能の度合いを指す語
    ◦スロークエリ…時間のかかっているSQL(遅いSQL)のことをスロークエリと呼びますMySQLやPostgreSQLの設定により取得することができ、どの程度遅いものを対象とするか等を指定することが出来ます。事業や実行する処理にもよるが、2秒以上かかっていたら大体遅い部類と言って良い。
    ◦クエリログ…クライアントからの MySQL Server への接続・接続解除の情報、およびクライアントから実行された全ての SQL クエリを出力してくれるログMySQL サーバが実行した全ての SQL クエリを出力するログです。 MySQL サーバに接続した時間、接続元ユーザ、実行したSQL を出力します。 MySQL の初期状態では出力されない設定になっているので、必要であれば出力するように設定する。

    ◦IDE（統合開発環境）…プログラミングをする際に必要なソフトウェアを統合して、1つの画面で操作できるようにしたものです.コードを書くテキストエディタ、人が分かる言葉から機械が分かる言葉に変換してくれるコンパイラ、テストを支援してくれるデバッガ、コードのバージョン管理など「開発環境」そのもの。フレームワークはアプリケーション開発の工程を楽にするものです
    　◦Eclipse…Javaを扱う統合開発環境として、IBMが商用製品として開発していました主にJavaの開発環境として使用されていますが、C++・Ruby・PHPなどでも利用可能。・開発の効率化・標準でJavaの開発環境が含まれている・プラグインを導入することでさまざまな言語が使える・便利なプラグインが豊富・バージョン管理システムと連携・デバッグやプログラムのステップ実行・コンパイル機能・開発支援機能・コード編集機能などの特徴がある。NetBeansに比べ、Eclipseはすでに広く使われており、シェア/多機能性/プラグインボリュームなどにおいてEclipseに一日の長があります
    　◦NetBeans…ほぼ100%Javaで実装されている統合開発環境です。デスクトップ/モバイル/Webアプリケーションを開発できます。Windows、Linux、Mac OS X、Solarisといった多くのOSで使うことができます。Eclipse, IntelliJに比べてプラグイン数が少ない。Eclipseに比べわかりやすくて初心者にも良い。
    　◦SpringToolSuite…Eclipseをベースにして、Spring開発に必要なものを組み込んだパッケージです。STSを入れればEclipseはその一部ですので、改めてインストールする必要はありませんWebコンテナをjarファイルに含めることができますjarファイル単体でWebアプリケーションの開発ができるということです

    ◦DBツール…データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称です。類似するタスクを実行できるデータベース・ツールもありますが、1つのデータベース・ツールですべてのデータベース管理タスクを実行することはできません。
    　◦A5:SQL Mk-2…フリーのSQL開発ツールです。高機能かつ軽量で、使い方が分かりやすいことを目標に開発されています。・様々なデータベースへの接続・SQL入力支援機能・GUIでのクエリーの設計と分析機能・実行計画取得機能・SQL整形機能・";"(セミコロン)または"/"(スラッシュ)のみの行、または "GO" のみの行で区切ったSQLの連続実行・複数の結果セットをまとめて Excel へ出力・SQLを２度実行しその結果を比較・Excelと連携可能なテーブルエディタ・テーブル内容のエクスポートとインポート・テーブルに大量のテスト用ダミーデータをインサートするなどの機能があります。
    　◦pgAdmin…Postgres データベースの設計、保守、 管理を行なうための汎用ツール・任意の SQL の入力。・情報ブラウザ、及び、データベース、テーブル、インデックス、 シーケンス、ビュー、トリガ、関数、言語を'作成する機能'。・ユーザ、グループ、及び権限の設定用ダイアログ。・生成したスクリプトの更新に関する履歴管理。・Microsoft MSysConf テーブルの設定。・データインポート及びエクスポート用のウィザード。・データベース移行用のウィザード。・データベース、テーブル、インデックス、シーケンス、言語、 ビューに関する、定義済みのレポート。などの、機能がある
    　◦DBeaver…SQLクライアント&DB管理ツール。PostgreSQLやMySQLなどの主要なデータソースに対応しており、マルチプラットフォーム（Windows/Mac OS X/Linux）に対応している  無料と有料バージョンがある。様々なDBMSに対応している。頻繁にバージョンアップされている。UIがEclipseと同じなので、Eclipseの操作に慣れていると同じ感覚で操作できる。様々なデータ分析ツールにも対応しております
    　◦MySQL Workbench…データベースアーキテクト、開発者、DBA のための統合ビジュアルツールです。MySQL Workbench は、データ・モデリング、SQL 開発、およびサーバー設定、ユーザー管理、バックアップなどの包括的な管理ツールを提供します。MySQL Workbench は Windows、Linux、Mac OS X で利用可能です。Sequel Proのバックアップとして使うケースが多い。Sequel Proに比べMySQL WorkBenchの方が動作が遅く、Sequel Proのユーザーにとって、メインにするには物足りないところです
    　◦Sequel Pro…データベースをExcelのような表で確認・編集をすることができるMac専用のアプリです。フリーソフトウェア、GUI操作で簡単に使えることやSSL Tunnelが使えることが特徴。基本的な機能を兼ね備えているので使い勝手が良いのが魅力。GUIで操作できると使い始めや使い慣れていない場合でもすぐに馴染むことができます
    　◦TeamSQL…無料。動作が重く、会員登録が必要。完全無料を謳っているDBをGUIで管理する為のソフトウェアのひとつです。大王しているDBの種類が多い。

■ 肩書

    ◦PM…プロジェクトの計画から運営管理、スタッフのアサインやマネジメントまで、プロジェクトの全工程に関わります。
システム開発プロジェクトの責任者としてプロジェクトの企画から予算や工数の割り出し、人材確保など、プロジェクト遂行に必要なすべての準備及び調達を行うのがプロジェクトマネージャーの仕事です。仕様策定、設計、テストなど開発プロジェクトの各工程に対して工数を決め、納期を考慮しながら人員計画や必要な作業環境及びリスク回避対策を加味した作業計画を立てます。
その作業計画に沿って人員や設備を整え、プロジェクトが始動した後はプロジェクトの作業進捗状況を定期的に確認します。プロジェクトに問題が生じていれば早急に解決策や改善案を講じ、状況によってはクライアントとの交渉、開発部署への対応を行うこともプロジェクトマネージャーの仕事です。プロジェクト完了後はレビューを実施し、問題点とその解決策、評価などの情報をプロジェクト完了報告書にまとめます。
    ◦PL…チームを管理する仕事です場合によってはプロジェクトマネージャーのサポート役として業務に携わります。プロジェクトのスケジュール調整や進捗管理をはじめ、顧客折衝やプログラミング業務に関わることもあります。さらに、チームメンバーと交流し、信頼関係を築くことも大切な業務のひとつです。開発現場では工程ごとにプロジェクトリーダーが立てられることも多く、要件定義を担当するプロジェクトリーダーや開発を担当するプロジェクトリーダーのように、複数名で構成されています。環境整備や業務ごとのグループの開発現場のまとめ役、トラブル対応、他領域との連携なども仕事です。
    ◦PG（PE）…SEが作成した設計書に沿ってプログラミングを行う仕事のことです。システム開発における製造工程を担当します
    ◦SE…システム開発は、要件定義⇒設計⇒製造⇒試験という流れで進みますが、SEが主に担当するのはその中の要件定義～設計の部分です。要件定義ではシステム全体の仕様を定め、その後、基本設計、詳細設計においてシステムの細部を設計していきます。
    ◦デザイナー…UIとUXを総合的にデザインするのが、UI/UXデザイナー。WEBサイトのランディングページのビジュアルデザインを行ったり、サイト全体のデザインの統一感を管理したり、実際にHTMLやCSSを使ってWEBページをコーディングしたりといった業務を行うのがwebデザイナー。
    ◦エンジニア…工学（エンジニアリング）に関する専門的な知識やスキルを持った人材
    　◦フロントエンド・エンジニア…Webサイトの閲覧や操作などのユーザーが直接見たり、触れたりする部分（フロントエンド）を開発するエンジニアのことです。フロントエンジニアはHTML、CSS、JavaScript、PHPなどによる、Webサイトのコーディングを担当します。
    　◦サーバーサイド・エンジニア…サーバーの設計や構築、また運用や保守などを専門に担当設計とは、クライアントの目的に合わせた最適なサーバー構成（サーバーの台数やスペックなど）を決めることです。構築では、OSやサーバーアプリケーションのインストールや設定、サーバーのサーバーラックへの固定やネットワークケーブルの配線を行います。
    　◦バックエンド・エンジニア…プログラムの開発からWebサーバー、データベースといった環境整備まで幅広く担当するWeb系の技術者です。主に、ユーザーからは見えない裏側（バックエンド）のシステム部分を構築します。主な仕事内容はサーバーとデータベースの構築、システム開発と運用等。

■ UI（ユーザーインターフェース）

    ◦UI…UI（User Interface／ユーザーインタフェース）とは「ユーザーがPCとやり取りをする際の入力や表示方法などの仕組み」UIと相互に影響を与える存在としてUX（User Experience／ユーザーエクスペリエンス）サービスなどによって得られるユーザー体験がある
    　◦CUI…コンピュータやソフトウェアが利用者に情報を提示したり操作を受け付けたりする方法（UI)の類型の一つで、すべてのやり取りを文字によって行う方式。
    　◦GUI…コンピュータからの出力にグラフィックス表示を多用し、操作をマウスなどで主に画面上の位置を指定して行う操作環境。コンピュータに詳しいとは限らない一般消費者にも広く普及しているコンピュータ製品のほとんどがGUIによる表示・操作を基本としている。

■ ファイル／ディレクトリ

    ◦ファイル…コンピュータにおけるデータの管理単位の一つで、ストレージ装置（外部記憶装置）などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり。
    ◦拡張子…コンピュータのストレージ（外部記憶装置）に記録されたファイル名のうち、「.」（ドット/ピリオド）で区切られた右側の部分。ファイルの種類や形式を表すために利用者やソフトウェアによって付与されるもの
    ◦ディレクトリ…多数の対象をその所在などの情報と共に一覧できるよう整理したものを意味することが多い。ストレージ（外部記憶装置）のファイルシステムなどで、複数のファイルを格納し、ファイルを分類・整理することができる保管場所のことをディレクトリという
    　◦ルート・ディレクトリ…ディレクトリの中にディレクトリを、さらにその中にディレクトリを作ることもでき、ディレクトリ構造全体は上位階層から下に向かって順に枝分かれしていく木構造（ツリー構造）となる。この中で、最上位のある唯一のディレクトリのことをルートディレクトリという。
    　◦カレント・ディレクトリ…実行中のソフトウェアなどがストレージ（外部記憶装置）のファイルシステム中で現在位置として指し示しているディレクトリのこと
ストレージのファイルシステムを（UNIX系OSではストレージ以外のシステム上の資源も含む）階層構造で表したディレクトリツリーの中で、「今どこにいるのか」を表している。
    ◦パス…コンピュータ内で特定の資源の所在を表す文字列のことをパスという。「ディレクトリ」（directory）が多段階の入れ子状になった構造になっている。これを階層構造と捉えて、最上位から順にディレクトリ名を並べて記したものがパスである。
    　◦絶対パス…階層構造の頂点（ルートディレクトリ）からの位置を記述する記法。パスを設定するときなんかに使った記法。
    　◦相対パス…現在操作対象としているディレクトリ位置（カレントディレクトリ）を起点に、相対的な位置を記述する記法
相対パスは現在位置を「.」、一つ上の階層の親ディレクトリを「..」という特殊な表記で表し、「./hoge.txt」（カレントディレクトリにあるhoge.txt）や「../../hoge.txt」（2階層上のディレクトリのhoge.txt）のように書き表す。

■ ネットワーク

    ◦LAN…限られた範囲内にあるコンピュータや通信機器、情報機器などをケーブルや無線電波などで接続し、相互にデータ通信できるようにしたネットワークのこと
    ◦WAN…通信事業者の回線網などを通じて地理的に離れた機器や施設間を広域的に結ぶネットワーク
    ◦クライアント…ネットワーク上で、サーバーと呼ばれるコンピューターからサービスを受ける側、あるいはサーバーに処理を依頼する側のコンピューター端末のこと
    ◦サーバー…クライアントからの要求に対してサービスを提供するコンピューター、またはアプリケーションのこと

■ 各種プロトコル

    ◦HTTP…Hyper Text Transfer ProtocolWebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル（通信規約）。PCやスマートフォンなどインターネットを利用している環境が異なる場合も、共通の通信規約を定めることで、同じ手順でホームページのデータをやりとりできます
    ◦FTP…File Transfer Protocolの略で、ファイル転送プロトコルともいう。HTTPと異なるのは、ファイル転送のみを目的としたプロトコルであることとサーバ側の認証が必要である。つまり、利用者認証を行ったうえで、利用者に許可された権限・領域でファイルの送受信となる
    ◦HTTPS…Hyper Text Transfer Protocol Secure 。httpにセキュリティ機能を追加したものです。通信が暗号化されている
    ◦SSL…「通信内容を秘匿する暗号機能」「通信相手の真正性」「通信データが改ざんされていないか検知する機能」の3つの機能を持った通信規約（プロトコル）Webサイトを安全に表示することが目的、閲覧者が主な対象。
    ◦SSH…ネットワークに接続された機器を安全にインターネット経由で遠隔操作し、管理するための手段です。サーバーへの安全な接続を目的とし、サーバー管理者が主な対象。
    ◦ポート、ポート番号… ポートはIPアドレスとプロトコルごとに16ビットの数値によって特定され、この数値のことをポート番号(port number)という。IPアドレスがあればネットワーク上のコンピュータを一意に識別することができますが、 該当コンピュータのどのプログラムに通信パケットを届けるかは、 IPアドレスだけでは決定できません。 どのプログラムに通信パケットを渡すのかを決定するために、 ポート番号を使用します。
    ◦HTTP、FTP、SSHの各ポート番号…HTTP…80　SSH…22　FTP(データ)…20　FTP(制御)…21
    ◦ファイアウォール…送企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”です。フィルタリング(通過させるかどうか判断する）の方法は以下の2種類があります。
パケットフィルタリング…ヘッダ（パケットの先頭にある、パケットの状態を記録している部分）を解析して、通過させるかどうか判断する
アプリケーションレベルゲートウェイ…プロキシサーバ経由で接続を行い、サービス毎に認証を行う）
    ◦TCP…IPと同様にインターネットにおいて標準的に利用されているプロトコルです。TCPは、IPの上位プロトコルでトランスポート層で動作するプロトコル。ネットワーク層のIPとセッション層以上のプロトコル（例：HTTP、FTP、Telnet) の橋渡しをする形で動作しています。TCPは、コネクション型通信（通信開始前に相手との間で仮想的な通信路を確保する）を行います。

■ IPアドレス

    ◦IPアドレス…IPネットワーク上の情報機器を識別するために指定するネットワーク層における識別用の番号である。またネットワーク部とホスト部から構成されています。なお、ネットワーク部とホスト部の境界線は、IPアドレスによって異なっています。
    　◦グローバルIPアドレス…インターネットに接続されているコンピュータや通信機器を個々に特定するための一意で割り当てられたIPアドレスのことです。インターネット上の住所にあたり、インターネットに接続する際に必ず必要です。
    　◦プライベートIPアドレス…LANなどの企業内ネットワークに存在する端末が、自由に使用できるIPアドレスのこと。自ネットワーク内でのみ一意であるため、ほかのネットワークでは同じプライベートアドレスが利用されている可能性がある。

■ ドメイン

    ◦ドメイン…IPネットワークにおいて、個々のコンピュータを識別し、接続先を指定するために使用される名称の一部。https://www.aaaa.com/の「aaaa.com」の部分
    ◦DNS…Domain Name Systemの略称で、ドメインとIPアドレスを対応付けて管理するシステムのことを言います。数字を組み合わせたコンピュータの住所である「IPアドレス」を、人が理解しやすいURLへと変換するための仕組みです
    ◦VPN…Virtual Private Networkの頭文字を取った用語です。離れた場所の間を仮想的な専用線でつないで安全なデータ通信を実現する仕組みで、仮想プライベート・ネットワークとも言います。インターネット回線を利用して離れた拠点同士のLANをつなぐ仮想技術です。スマートデバイスにVPN接続ソフトウェアを導入することで、外にいても社内ネットワークに入ることができるリモートアクセスVPNも可能ですセキュリティが向上する。専用線よりもはるかに低コストで専用線に近いセキュリティを実現できる物理的な距離に関係なく疑似的なLANを構築できる
    ◦ブリッジ…ネットワークの分野で、複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスなどデータリンク層（リンク層、第2層、MAC層）の宛先情報を参照して中継の可否を判断する機能を持ったもの
    ◦プロキシサーバー…インターネットに直接接続できないコンピューターに代わり、インターネットに接続し、Webサイトへのアクセスなどを行うサーバーのことを指す。外部からの不正アクセスを防止したり、業務と関係のないWebサイトへのアクセスを禁止したりすることができる。

■ 電子メール

    ◦SMTP…Simple Mail Transfer Protocolの略。インターネットなどのTCP / IPネットワークで標準的に用いられる、メールを送信するための通信プロトコルの一つ。メールを相手のメールサーバーまで届ける仕組みといえる。
    ◦POP…ユーザ側に実装されているメールソフトがメールサーバから自身のメールを取り出す処理において使用するメール受信用プロトコル。自分宛ての電子メールを保管しているメールサーバにアクセスし、新しいメールが届いているか調べたり、手元のメールソフトなどにメールを受け取るための通信方法を定めている。サーバーにアクセスする度に届いているものをダウンロードし、メールソフト側で管理をする。
    ◦IMAP…電子メール（eメール）を受信するための通信規約（プロトコル）の一つ。POPに比べメールアドレスごとの専用の保存領域で管理されるため、複数台での利用などに適しているが、サーバ側でメールの保管領域が大量に必要なため、大規模なシステムでは一人あたりの容量が厳しく制限される場合もある。

■ セッションとクッキー

    ◦セッション…コンピュータネットワークでは、接続を確立してから切断するまでの一連の通信のこと。システムによっては次回のアクセス時に前回セッションの続きの状態から利用を開始できる場合もある。
    ◦クッキー…ホームページを訪問したユーザーの情報を一時的の保存する仕組み、またはそのデータです。ID、パスワード、メールアドレス、訪問回数などがユーザー情報として保存されます。有効のままパソコンやスマートフォンを盗難されてしまった時に、情報を悪用されやすい。
    ◦キャッシュ…データを一時的に保存することで、データの処理速度を速める考え方、仕組みのこと。クッキーはホームページでのユーザーのデータを保存するのに対し、キャッシュはホームページ自体のデータを保存する。

■ DB（データベース）について

    ◦インデックス…同種の複数のものが並んでいるときに、個々の要素を区別するために付けられた通し番号などの識別情報をインデックスという。配列の要素を指し示す添字などが該当する。データベースやファイルシステム、検索エンジンなどでは、収集・格納された大量のデータをすばやく検索・抽出するために作成された索引データをインデックスという

■ テストについて

    ◦フロー…コンピュータプログラムを構成する命令や手続き、処理の流れなどのことをフローという。矩形や矢印などを組み合わせてこれを図示したものをフローチャートという。コンピュータプログラムの制御パス中の変数の状態変化（定義・参照・消滅）に注目して、エラー検出を図る静的テスト技法をデータフローテストという。

■ チケット管理ツール
    ◦タスク…コンピューターが処理する作業の最小単位のこと」をタスクと呼ぶ。
ある目的のために順番に連続して実行されるひとまとまりのプログラムやコマンドの集合のことをタスクということがある。一つのプログラムが並行する複数の処理の流れを同時に実行する場合に、その一つ一つの連続した命令の流れのことをタスクということがある。メインメモリ上に展開され実行状態にあるプログラムのことを指すもの。
チケット管理とは、実施するべき作業や課題を「チケット」として管理する方法です。発生日や作業内容、優先度、担当者や期日を登録して管理します。プロジェクト管理ではチケットの発行・処理枚数により、プロジェクト全体の状況を把握する手段として活用されます。作業の進捗状況に応じてチケットが更新されるため、内容は時系列で登録されます。そのため有事の際は、チケットを遡ることで問題点に気づきやすいでしょう。また、タスクごとにチケットが発行されるため、タスクとチケットを紐づけた管理が可能です。過去の記録を参照できることや作業の進歩や残作業の把握ができる。
■ バージョン管理

    ◦Git…プログラムソースなどの変更履歴を管理する分散型のバージョン管理システムのことです。ローカル環境（自分のパソコンなど）に、全ての変更履歴を含む完全なリポジトリの複製が作成されるということです。
    ◦SVN…オープンソースの集中型バージョン管理システム。クライアント（要求側）とサーバ（提供側）の役割に分離するコンピュータネットワークのソフトウェアモデル。SVNではサーバで管理しているソースリポジトリに対し、クライアントから作業コピーを要求し受け取り編集して、またサーバに編集内容（差分）を送っている。
リポジトリと呼ばれるサーバ上の領域でファイルを集中的に管理し、複数の作業者が並行して内容を更新していくことができるようにする。個々のファイルにいつ誰がどのような変更を行ったかを記録しており、必要に応じて特定の日時の版を参照したり、その状態に戻したりすることができる。また、プロジェクトの時系列を分岐（ブランチ）して派生プロジェクトを作成したり、それを再び元の系列に融合（マージ）したりすることができる
    ◦デグレ…デグレードとは、新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが再発・復活すること。また、新しいファイルなどを古い内容で上書きしてしまい、更新内容が失われること。
    ◦マージツール…バージョン管理されているファイル群に対して行われた変更を統合する機能がある。マージが必要とされる典型的なケースとしては、ひとつのファイルが、異なるコンピュータ上で、異なる利用者によって同時に変更された場合がある。2つのブランチをマージすると、双方のチェンジセットを取り込んだファイル群ができあがる。